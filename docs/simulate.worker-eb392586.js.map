{"version":3,"file":"simulate.worker-eb392586.js","sources":["../src/simulate-util.mjs","../src/simulate-orb.mjs","../src/simulate-skill.mjs","../src/simulate.worker.mjs","../src/simulate.worker.mjs?comlink"],"sourcesContent":["const BUFF_VALUE = {\r\n  atk: 0.5,\r\n  def: 0.7,\r\n  spd: 0.3\r\n};\r\n\r\nexport function getBuffValue(buff, debuff, key) {\r\n  if (buff[key] == debuff[key] || !BUFF_VALUE[key]) return 1;\r\n  if (buff[key]) return 1 + BUFF_VALUE[key];\r\n  return 1 - BUFF_VALUE[key];\r\n}\r\n\r\nexport function calcScore(stat, mod, leaderBuff) {\r\n  let score = 0;\r\n  for (const key in mod) {\r\n    let statValue = stat[key] || 0;\r\n    if (leaderBuff && leaderBuff.type.startsWith(key)) {\r\n      if (leaderBuff.type.endsWith(\"%\")) {\r\n        statValue *= (leaderBuff.value + 100) / 100;\r\n      } else {\r\n        statValue += leaderBuff.value;\r\n      }\r\n    }\r\n    score += statValue * mod[key];\r\n  }\r\n  return score;\r\n}\r\n\r\nexport function cmpScore(a, b) {\r\n  return a.score - b.score;\r\n}\r\n","import {calcScore, cmpScore} from \"./simulate-util.mjs\";\r\n\r\nconst MAIN_EFFECTS = {\r\n  hp: [4240, 5220],\r\n  \"hp%\": [0.5, 0.65],\r\n  atk: [270, 345],\r\n  \"atk%\": [0.5, 0.65],\r\n  def: [270, 345],\r\n  \"def%\": [0.5, 0.65],\r\n  spd: [45, 60],\r\n  fcs: [65, 80],\r\n  rst: [65, 80]\r\n};\r\n\r\nconst SUB_EFFECTS = {\r\n  \"hp\": [2050, 2610],\r\n  \"hp%\": [0.22, 0.30],\r\n  \"atk\": [135, 170],\r\n  \"atk%\": [0.22, 0.30],\r\n  \"def\": [135, 170],\r\n  \"def%\": [0.22, 0.30],\r\n  \"spd\": [18, 25],\r\n  \"fcs\": [27, 35],\r\n  \"rst\": [27, 35]\r\n};\r\n\r\nconst SUB_EFFECT_ALL = [0.05, 0.07];\r\n\r\nexport function buildOrb({dress, rarity, mod, subElement, leaderBuff}) {\r\n  const suggestedEffects = Object.keys(mod).filter(t => !t.startsWith(\"target\"));\r\n  return [...generateOrbs(dress, rarity, suggestedEffects, subElement)]\r\n    .map(orb => {\r\n      if (subElement) {\r\n        orb.subEffects.push(\"elm\");\r\n      }\r\n      return {\r\n        score: calcScore(orb.stats, mod, leaderBuff),\r\n        name: `${orb.mainEffect} (${orb.subEffects.join(\",\")})`\r\n      };\r\n    })\r\n    .sort(cmpScore)\r\n    .pop();\r\n}\r\n\r\nfunction *combination(list, len) {\r\n  if (list.length <= len) {\r\n    yield list.slice();\r\n    return;\r\n  }\r\n  \r\n  const result = [];\r\n  yield* search(0);\r\n  \r\n  function *search(index) {\r\n    if (result.length >= len) {\r\n      yield result.slice();\r\n      return;\r\n    }\r\n    for (let i = index; list.length - i >= len - result.length; i++) {\r\n      result.push(list[i]);\r\n      yield* search(i + 1);\r\n      result.pop();\r\n    }\r\n  }  \r\n}\r\n\r\nfunction *generateOrbs(dress, rarity = \"sr\", suggestedEffects = [], subElement = false) {\r\n  suggestedEffects = [...normalizeSuggestedEffects(suggestedEffects)];\r\n  \r\n  for (const stat of suggestedEffects) {\r\n    for (const subs of combination([\r\n      ...suggestedEffects.filter(e => e != stat),\r\n      \"all\"\r\n    ], subElement ? 3 : 4)) {\r\n      yield {\r\n        mainEffect: stat,\r\n        subEffects: subs,\r\n        subElement,\r\n        stats: buildOrbStats(dress, stat, subs, rarity)\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildOrbStats(dress, main, subs, rarity) {\r\n  const rarityIndex = rarity === \"ur\" ? 1 : 0;\r\n  const result = {};\r\n  assignStat(main, MAIN_EFFECTS);\r\n  subs.forEach(s => assignStat(s, SUB_EFFECTS));\r\n  return result;\r\n  \r\n  function assignStat(name, effectTable) {\r\n    if (name === \"all\") {\r\n      for (const key of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        result[key] = (result[key] || 0) + dress[key] * SUB_EFFECT_ALL[rarityIndex];\r\n      }\r\n    } else if (name.endsWith(\"%\")) {\r\n      const key = name.slice(0, -1);\r\n      result[key] = (result[key] || 0) + dress[key] * effectTable[name][rarityIndex];\r\n    } else {\r\n      result[name] = (result[name] || 0) + effectTable[name][rarityIndex];\r\n    }\r\n  }\r\n}\r\n\r\nfunction *normalizeSuggestedEffects(effects) {\r\n  for (const e of effects) {\r\n    yield e;\r\n    if (MAIN_EFFECTS[e + \"%\"]) {\r\n      yield e + \"%\";\r\n    }\r\n  }\r\n}\r\n","import allSkillData from \"./skill-data.yml\";\r\nimport {getBuffValue} from \"./simulate-util.mjs\";\r\n\r\nconst SPECIALS = {\r\n  \"聖チャールズスポーツユニ りり\": [\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(3)\r\n    }\r\n  ],\r\n  \"Magica2061 はなび\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"ギャルアーミー 丹\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.length ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"灼熱野球ユニ 蒼\": [\r\n    null,\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(4 * 2)\r\n    }\r\n  ],\r\n  \"灼熱野球ユニ ここあ\": [\r\n    null,\r\n    null,\r\n    {\r\n      missRate: ({targetDebuff}) => targetDebuff.def ? -999 : 0,\r\n      critRate: ({targetDebuff}) => targetDebuff.def ? 999 : 0\r\n    }\r\n  ],\r\n  \"ワイン娘 いろは\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stun ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス マリアンヌ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス りり\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"デモンズスタイルレウコシア 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.3)\r\n    }\r\n  ],\r\n  \"マジカルスイムスーツ ここあ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"†ハロウィッチ† いろは\": {\r\n    condBonus: bonusByBuffNumber(0.2)\r\n  },\r\n  \"フェニックス はなび\": {\r\n    condBonus: bonusByTargetDebuff(0.2)\r\n  },\r\n  \"デモンズスタイルレウコシア ここあ\": {\r\n    condBonus: bonusByBuffNumber(0.1)\r\n  },\r\n  \"デモンズスタイルレウコシア 丹\": {\r\n    critRate: ({targetDebuff}) => targetDebuff.length ? 0 : 1\r\n  },\r\n  \"Ultimate Magica 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      critRate: ({targetElement}) => targetElement === \"light\" ? 0.35 : 0.15,\r\n      extraDamageOnCrit: ({targetElement}) => targetElement === \"light\" ? 2.5 : 2\r\n    }\r\n  ]\r\n};\r\n\r\nexport const skillMap = new Map(allSkillData.map(s => [s.name, compileSkill(s)]));\r\n\r\n// FIXME: should we move this to build-time?\r\nfunction compileSkill({name, skills, special, passive}) {\r\n  const result = [];\r\n  for (let i = 0; i < skills.length; i++) {\r\n    result.push({\r\n      skill: skills[i],\r\n      special: compileSpecial(special?.[i], passive, Array.isArray(SPECIALS[name]) ? SPECIALS[name][i] : SPECIALS[name])\r\n    });\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction compileSpecial(...args) {\r\n  const result = {};\r\n  for (const target of args) {\r\n    if (!target) continue;\r\n    \r\n    for (const key in target) {\r\n      if (!result[key]) {\r\n        result[key] = [];\r\n      }\r\n      result[key].push(target[key]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction bonusByBuffNumber(bonus) {\r\n  return ({buff}) => Object.keys(buff).length * bonus + 1;\r\n}\r\n\r\nfunction bonusByTargetDebuff(bonus) {\r\n  return ({targetDebuff}) => targetDebuff.length * bonus + 1;\r\n}\r\n\r\nfunction cutByCrit(scale) {\r\n  return ({r}) => (1 - r.missRate) * r.critRate * scale;\r\n}\r\n\r\nconst SUPER = {\r\n  fire: \"lightning\",\r\n  lightning: \"water\",\r\n  water: \"fire\",\r\n  dark: \"light\",\r\n  light: \"dark\"\r\n};\r\n\r\nfunction getElementAffinity(self, target) {\r\n  if (SUPER[self] === target) {\r\n    return \"superior\";\r\n  }\r\n  if (SUPER[target] === self) {\r\n    return \"inferior\";\r\n  }\r\n  return \"neutral\";\r\n}\r\n\r\nconst BASE_RATE = {\r\n  superior: {\r\n    missRate: 0,\r\n    critRate: 0.45,\r\n    heavyRate: 0.3,\r\n    ignoreDefRate: 0\r\n  },\r\n  inferior: {\r\n    missRate: 0.5,\r\n    critRate: 0.15,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  },\r\n  neutral: {\r\n    missRate: 0,\r\n    critRate: 0.3,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  }\r\n};\r\n\r\nfunction sum(arr, context) {\r\n  if (!arr) return 0;\r\n  let result = 0;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result += value(context);\r\n    } else {\r\n      result += value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction product(arr, context) {\r\n  if (!arr) return 1;\r\n  let result = 1;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result *= value(context);\r\n    } else {\r\n      result *= value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getBasicRate(context) {\r\n  const {special, element, targetElement, buff, debuff} = context;\r\n  \r\n  const baseRate = BASE_RATE[\r\n    special.element?.[0] ||\r\n    targetElement in BASE_RATE && targetElement ||\r\n    getElementAffinity(element, targetElement)\r\n  ];\r\n  \r\n  const r = {};\r\n  for (const key in baseRate) {\r\n    let value = baseRate[key] + sum(special[key], context);\r\n    if (key === \"critRate\" && buff.crit) {\r\n      value += 0.3;\r\n    }\r\n    if (key === \"missRate\" && debuff.miss) {\r\n      value += 0.5;\r\n    }\r\n    r[key] = Math.min(Math.max(value, 0), 1);\r\n  }\r\n  \r\n  return r;\r\n}\r\n\r\nfunction getSpecialBonus(context) {\r\n  const {r, special, targetDef, targetDebuff} = context;\r\n  \r\n  const elementBonus = r.missRate * 0.7\r\n    // FIXME: do they add up?\r\n    + (1-r.missRate) * r.critRate * 1.5 * product(special.extraDamageOnCrit, context)\r\n    + (1-r.missRate) * (1-r.critRate) * r.heavyRate * 1.3\r\n    + (1-r.missRate) * (1-r.critRate) * (1-r.heavyRate) * 1;\r\n    \r\n  const condBonus = product(special.condBonus, context);\r\n    \r\n  const defBonus = r.ignoreDefRate * 1 +\r\n    (1-r.ignoreDefRate) * (750 / (750 + targetDef * (targetDebuff.def ? 0.3 : 1)));\r\n    \r\n  return elementBonus * condBonus * defBonus;\r\n}\r\n\r\nexport function simulateSkillMod({\r\n  dress,\r\n  turn: maxTurn = 5,\r\n  targetElement,\r\n  targetDef,\r\n  buff,\r\n  debuff,\r\n  targetBuff,\r\n  targetDebuff,\r\n  useCut = false,\r\n  targetNumber = 1,\r\n  s3endless,\r\n  recastReduction = [],\r\n}) {\r\n  const skillData = skillMap.get(dress.name);\r\n  if (!skillData) throw new Error(`missing skill data for ${dress.name}`);\r\n\r\n  const skills = skillData.map((rawData, index) => {\r\n    const context = {\r\n      buff,\r\n      debuff,\r\n      targetBuff,\r\n      targetDebuff,\r\n      special: rawData.special,\r\n      element: dress.element,\r\n      targetElement,\r\n      targetDef,\r\n      targetNumber\r\n    };\r\n    \r\n    context.r = getBasicRate(context);\r\n    \r\n    return {\r\n      index,\r\n      mod: buildMod({\r\n        skill: rawData.skill,\r\n        bonus: dress.skill[index].bonus,\r\n        specialBonus: getSpecialBonus(context),\r\n        cut: useCut ? sum(rawData.special?.cutRate, context) : 0,\r\n        buff,\r\n        debuff,\r\n        targetNumber,\r\n        s3endless,\r\n      }),\r\n      cd: dress.skill[index].cd?.[1] || 1,\r\n      sleep: 0,\r\n      recast: sum(rawData.special?.recast),\r\n      prefer: []\r\n    };\r\n  }).reverse();\r\n  \r\n  // FIXME: currently we only calculate `prefer` for 1cd skill. does it also work for other skills?\r\n  for (const skill of skills) {\r\n    if (skill.cd > 1) continue;\r\n    \r\n    for (const s of skills) {\r\n      if (s !== skill && cmpMod(s.mod, skill.mod) > 0) {\r\n        skill.prefer.push(s.index);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // if we use s1 while s2 is not in cd, add s2 to deadzone so we only generate rotation like\r\n  // 21112... instead of 12111...\r\n  let deadZone = new Set;\r\n  const results = [];\r\n  \r\n  search(0, Array(skills.length).fill(0), {}, []);\r\n  \r\n  return results;\r\n  \r\n  function search(turn, sleep, mod, history) {\r\n    if (turn >= maxTurn) {\r\n      for (let i = 0; i < results.length; i++) {\r\n        const r1 = cmpMod(mod, results[i].mod);\r\n        if (r1 > 0) {\r\n          results[i] = {history: history.slice(), mod};\r\n          return;\r\n        }\r\n        const r2 = cmpMod(results[i].mod, mod);\r\n        if (r2 > 0) {\r\n          return;\r\n        }\r\n        if (r1 === r2 && r1 === 0) return;\r\n      }\r\n      results.push({history: history.slice(), mod});\r\n      return;\r\n    }\r\n    \r\n    for (const skill of skills) {\r\n      if (sleep[skill.index] > 0) continue;\r\n      \r\n      if (skill.prefer.some(i => sleep[i] <= 0)) continue;\r\n      \r\n      if (deadZone.has(skill.index)) continue;\r\n      \r\n      let oldDeadZone;\r\n      if (skill.cd === 1) {\r\n        oldDeadZone = new Set(deadZone);\r\n        for (const s of skills) {\r\n          if (s === skill || sleep[s.index] > 0) continue;\r\n          deadZone.add(s.index);\r\n        }\r\n      }\r\n      \r\n      const newMod = addMod(mod, skill.mod);\r\n      const newSleep = sleep.slice();\r\n      newSleep[skill.index] = skill.cd;      \r\n      for (let i = 0; i < newSleep.length; i++) {\r\n        newSleep[i] += skill.recast - 1 - (recastReduction.length > turn ? recastReduction[turn] : 0);\r\n      }\r\n      history.push(skill.index);\r\n      \r\n      search(turn + 1, newSleep, newMod, history);\r\n      \r\n      history.pop();\r\n      if (oldDeadZone) {\r\n        deadZone = oldDeadZone;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildMod({\r\n  skill,\r\n  bonus,\r\n  specialBonus,\r\n  cut,\r\n  buff,\r\n  debuff,\r\n  targetNumber,\r\n  s3endless = false,\r\n}) {\r\n  const result = {};\r\n  skill.forEach((part, i) => {\r\n    for (const key in part.mod) {\r\n      result[key] = (result[key] || 0) +\r\n        part.mod[key] *\r\n        (100 + bonus) / 100 *\r\n        specialBonus *\r\n        getBuffValue(buff, debuff, key) *\r\n        part.hits *\r\n        (part.aoe ? targetNumber : 1) *\r\n        (s3endless ? getS3EndlessBonus(part.hits, i > 0) : 1);\r\n    }\r\n  });\r\n  if (cut) {\r\n    result.targetHp = (result.targetHp || 0) + cut * 0.05 * 0.85;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getS3EndlessBonus(hits, isSecondHit) {\r\n  if (isSecondHit) {\r\n    return 5;\r\n  }\r\n  if (hits <= 1) {\r\n    return 1;\r\n  }\r\n  return ((hits - 1) * 5 + 1) / hits;\r\n}\r\n\r\nfunction addMod(a, b) {\r\n  const result = {...a};\r\n  for (const key in b) {\r\n    result[key] = (result[key] || 0) + b[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction cmpMod(a, b) {\r\n  let greater = false;\r\n  for (const key in b) {\r\n    if (!(key in a) || a[key] < b[key]) return -1;\r\n    if (a[key] > b[key]) greater = true;\r\n  }\r\n  return greater ? 1 : 0;\r\n}\r\n","import dressDB from \"../dress-db.yml\";\r\n\r\nimport {calcScore, cmpScore} from \"./simulate-util.mjs\";\r\nimport {buildOrb} from \"./simulate-orb.mjs\";\r\nimport {simulateSkillMod, skillMap} from \"./simulate-skill.mjs\";\r\n\r\nexport function simulateSubDress({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  allDresses = getAllDresses(includedDresses, maxLvDresses),\r\n  mainDressName,\r\n  mainDress = allDresses.find(d => d.name === mainDressName),\r\n  orbRarity,\r\n  buff,\r\n  debuff,\r\n  mod\r\n}) {\r\n  buff = normalizeBuff(buff);\r\n  \r\n  const mainDressResult = buildDress({\r\n    dress: mainDress,\r\n    mod,\r\n    orbRarity\r\n  });\r\n  \r\n  const allSubs = [...getAllSubs(mainDress, allDresses, mod, orbRarity, buff, debuff, true)]\r\n    .sort(cmpScore)\r\n    .reverse();\r\n  \r\n  return {\r\n    mod,\r\n    mainDress: mainDressResult,\r\n    subDresses: allSubs\r\n  };\r\n}\r\n\r\nfunction *getAllSubs(mainDress, allDresses, mod, orb, buff, debuff, useSubEl, leaderBuff) {\r\n  for (const dress of allDresses) {\r\n    if (dress === mainDress) continue;\r\n    \r\n    const build = subElement =>\r\n      buildDress({\r\n        dress,\r\n        mod,\r\n        subRatio: getSubRatio(mainDress, dress, subElement),\r\n        subElement,\r\n        orbRarity: orb,\r\n        leaderBuff\r\n      });\r\n    \r\n    yield build(false);\r\n    \r\n    if (useSubEl && !isJoker(dress) && mainDress.element !== dress.element) {\r\n      yield build(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeBuff(arr = []) {\r\n  const result = {\r\n    length: arr.length\r\n  };\r\n  for (const key of arr) {\r\n    result[key] = (result[key] || 0) + 1;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getDefaultTargetBuff() {\r\n  return {\r\n    immune: {\r\n      stun: true // this makes wine iroha stronger\r\n    }\r\n  };\r\n}\r\n\r\nexport function simulateDps({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  ignoreElement,\r\n  orb,\r\n  buff,\r\n  debuff,\r\n  target = {},\r\n  targetDebuff,\r\n  turn,\r\n  useCut,\r\n  targetNumber,\r\n  s3endless,\r\n  recastReduction,\r\n  leaderBuff\r\n}) {\r\n  target = normalizeTarget(target);\r\n  buff = normalizeBuff(buff);\r\n  debuff = normalizeBuff(debuff);\r\n  targetDebuff = normalizeBuff(targetDebuff);\r\n  \r\n  const allDresses = getAllDresses(includedDresses, maxLvDresses);\r\n  \r\n  const result = [];\r\n  \r\n  for (const dress of allDresses) {\r\n    if (!skillMap.has(dress.name)) continue;\r\n    \r\n    const useLeaderBuff = leaderBuff && leaderBuff.element === dress.element ? leaderBuff : undefined;\r\n    \r\n    for (const {history, mod} of simulateSkillMod({\r\n      turn,\r\n      dress, \r\n      targetDef: target.targetDef,\r\n      targetElement: target.targetElement,\r\n      buff,\r\n      debuff,\r\n      targetBuff: getDefaultTargetBuff(), // FIXME: make it customizable\r\n      targetDebuff,\r\n      useCut,\r\n      targetNumber,\r\n      s3endless,\r\n      recastReduction\r\n    })) {\r\n      const mainDress = buildDress({\r\n        dress,\r\n        mod,\r\n        orbRarity: orb,\r\n        leaderBuff: useLeaderBuff\r\n      });\r\n      const subs = [...getAllSubs(\r\n        dress,\r\n        allDresses,\r\n        mod,\r\n        orb,\r\n        buff,\r\n        debuff,\r\n        ignoreElement,\r\n        useLeaderBuff && leaderBuff.type.endsWith(\"%\") ? leaderBuff : undefined\r\n      )]\r\n        .sort(cmpScore)\r\n        .reverse();\r\n        \r\n      const subDresses = [];\r\n      const set = new Set;\r\n      for (const sub of subs) {\r\n        if (set.has(sub.dress.name)) continue;\r\n        set.add(sub.dress.name);\r\n        subDresses.push(sub);\r\n        if (subDresses.length >= 4) break;\r\n      }\r\n     \r\n      const subScore = subDresses.reduce((n, r) => n + r.score, 0);\r\n      \r\n      const targetScore = calcScore(target, mod);\r\n      \r\n      result.push({\r\n        score: mainDress.score + subScore + targetScore,\r\n        mainDress,\r\n        subDresses,\r\n        mod,\r\n        history\r\n      });\r\n    }\r\n  }\r\n  \r\n  const set = new Set;\r\n  \r\n  return result\r\n    .sort(cmpScore)\r\n    .reverse()\r\n    .filter(r => {\r\n      if (set.has(r.mainDress.dress.name)) {\r\n        return false;\r\n      }\r\n      set.add(r.mainDress.dress.name);\r\n      return true;\r\n    });\r\n}\r\n\r\nfunction normalizeTarget(target) {\r\n  const result = {};\r\n  for (const key in target) {\r\n    result[`target${key[0].toUpperCase()}${key.slice(1)}`] = target[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getSubRatio(main, sub, subElement) {\r\n  return (20 +\r\n    (getChar(main) === getChar(sub) ? 5 : 0) +\r\n    (main.element === sub.element || isJoker(sub) || subElement ? 5 : 0)) / 100;\r\n}\r\n\r\nfunction isJoker(dress) {\r\n  return dress.rarity === \"R\" || /^Magica 2020 \\S+$/.test(dress.name);\r\n}\r\n\r\nfunction getChar(dress) {\r\n  return dress.name.split(\" \").pop();\r\n}\r\n\r\nfunction buildDress({\r\n  dress,\r\n  mod, \r\n  subRatio = 1,\r\n  subElement = false,\r\n  orbRarity = \"sr\",\r\n  leaderBuff\r\n}) {\r\n  const orb = buildOrb({\r\n    dress,\r\n    rarity: orbRarity,\r\n    mod,\r\n    subElement,\r\n    leaderBuff: leaderBuff && leaderBuff.type.endsWith(\"%\") ? leaderBuff : undefined\r\n  });\r\n  return {\r\n    score: (calcScore(dress, mod, leaderBuff) + orb.score) * subRatio,\r\n    dress,\r\n    orb\r\n  };\r\n}\r\n\r\nfunction getAllDresses(included, maxLv) {\r\n  included = new Set(included);\r\n  maxLv = new Set(maxLv);\r\n  \r\n  return dressDB\r\n    .filter(d => included.has(d.name))\r\n    .map(shallowCopy)\r\n    .map(dress => {\r\n      for (const stat of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        if (Array.isArray(dress[stat])) {\r\n          dress[stat] = dress[stat][maxLv.has(dress.name) ? 2 : 1];\r\n        }\r\n      }\r\n      return dress;\r\n    });\r\n}\r\n\r\nfunction shallowCopy(obj) {\r\n  return {...obj};\r\n}\r\n","\n\t\timport * as m from \"C:\\\\Users\\\\eight04\\\\dev\\\\mgcm-skill-data\\\\src\\\\simulate.worker.mjs\";\n\t\timport {expose} from \"comlink\";\n\n\t\texpose(m);\n\t"],"names":["BUFF_VALUE","atk","def","spd","getBuffValue","buff","debuff","key","calcScore","stat","mod","leaderBuff","score","statValue","type","startsWith","endsWith","value","cmpScore","a","b","MAIN_EFFECTS","hp","hp%","atk%","def%","fcs","rst","SUB_EFFECTS","SUB_EFFECT_ALL","combination","list","len","length","slice","result","search","index","i","push","pop","generateOrbs","dress","rarity","suggestedEffects","subElement","normalizeSuggestedEffects","subs","filter","e","mainEffect","subEffects","stats","buildOrbStats","main","rarityIndex","assignStat","forEach","s","name","effectTable","effects","SPECIALS","聖チャールズスポーツユニ りり","cutRate","cutByCrit","Magica2061 はなび","condBonus","bonusByTargetDebuff","ギャルアーミー 丹","targetDebuff","灼熱野球ユニ 蒼","灼熱野球ユニ ここあ","missRate","critRate","ワイン娘 いろは","targetBuff","immune","stun","サディスティックサキュバス マリアンヌ","sleep","サディスティックサキュバス りり","デモンズスタイルレウコシア 陽彩","マジカルスイムスーツ ここあ","†ハロウィッチ† いろは","bonusByBuffNumber","フェニックス はなび","デモンズスタイルレウコシア ここあ","デモンズスタイルレウコシア 丹","Ultimate Magica 陽彩","targetElement","extraDamageOnCrit","skillMap","Map","map","compileSkill","skills","special","passive","skill","compileSpecial","Array","isArray","args","target","bonus","Object","keys","scale","r","SUPER","fire","lightning","water","dark","light","BASE_RATE","superior","heavyRate","ignoreDefRate","inferior","neutral","sum","arr","context","product","getBasicRate","element","baseRate","self","crit","miss","Math","min","max","getSpecialBonus","targetDef","simulateSkillMod","turn","maxTurn","useCut","targetNumber","s3endless","recastReduction","skillData","get","Error","rawData","buildMod","specialBonus","cut","cd","recast","prefer","reverse","cmpMod","deadZone","Set","results","history","r1","r2","some","has","oldDeadZone","add","newMod","addMod","newSleep","fill","part","hits","aoe","getS3EndlessBonus","targetHp","isSecondHit","greater","getAllSubs","mainDress","allDresses","orb","useSubEl","build","buildDress","subRatio","getSubRatio","orbRarity","isJoker","normalizeBuff","sub","getChar","test","split","t","join","sort","buildOrb","undefined","getAllDresses","included","maxLv","dressDB","d","shallowCopy","obj","includedDresses","maxLvDresses","mainDressName","find","subDresses","ignoreElement","toUpperCase","normalizeTarget","useLeaderBuff","set","subScore","reduce","n","targetScore","comlink04A08662","m"],"mappings":"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"}