{"version":3,"file":"simulate.worker-2c1b2857.js","sources":["../src/simulate-util.mjs","../src/simulate-orb.mjs","../src/simulate-skill.mjs","../src/simulate.worker.mjs","../src/simulate.worker.mjs?comlink"],"sourcesContent":["const BUFF_VALUE = {\r\n  atk: 0.5,\r\n  def: 0.7,\r\n  spd: 0.3\r\n};\r\n\r\nexport function getBuffValue(buff, debuff, key) {\r\n  if (buff[key] == debuff[key] || !BUFF_VALUE[key]) return 1;\r\n  if (buff[key]) return 1 + BUFF_VALUE[key];\r\n  return 1 - BUFF_VALUE[key];\r\n}\r\n\r\nexport function calcScore(stat, mod) {\r\n  let score = 0;\r\n  for (const key in mod) {\r\n    score += (stat[key] || 0) * mod[key];\r\n  }\r\n  return score;\r\n}\r\n\r\nexport function cmpScore(a, b) {\r\n  return a.score - b.score;\r\n}\r\n","import {calcScore, cmpScore} from \"./simulate-util.mjs\";\r\n\r\nconst MAIN_EFFECTS = {\r\n  hp: [4240, 5220],\r\n  \"hp%\": [0.5, 0.65],\r\n  atk: [270, 345],\r\n  \"atk%\": [0.5, 0.65],\r\n  def: [270, 345],\r\n  \"def%\": [0.5, 0.65],\r\n  spd: [45, 60],\r\n  fcs: [65, 80],\r\n  rst: [65, 80]\r\n};\r\n\r\nconst SUB_EFFECTS = {\r\n  \"hp\": [2050, 2610],\r\n  \"hp%\": [0.22, 0.30],\r\n  \"atk\": [135, 170],\r\n  \"atk%\": [0.22, 0.30],\r\n  \"def\": [135, 170],\r\n  \"def%\": [0.22, 0.30],\r\n  \"spd\": [18, 25],\r\n  \"fcs\": [27, 35],\r\n  \"rst\": [27, 35]\r\n};\r\n\r\nconst SUB_EFFECT_ALL = [0.05, 0.07];\r\n\r\nexport function buildOrb({dress, rarity, mod, subElement}) {\r\n  const suggestedEffects = Object.keys(mod).filter(t => !t.startsWith(\"target\"));\r\n  return [...generateOrbs(dress, rarity, suggestedEffects, subElement)]\r\n    .map(orb => {\r\n      if (subElement) {\r\n        orb.subEffects.push(\"elm\");\r\n      }\r\n      return {\r\n        score: calcScore(orb.stats, mod),\r\n        name: `${orb.mainEffect} (${orb.subEffects.join(\",\")})`\r\n      };\r\n    })\r\n    .sort(cmpScore)\r\n    .pop();\r\n}\r\n\r\nfunction *combination(list, len) {\r\n  if (list.length <= len) {\r\n    yield list.slice();\r\n    return;\r\n  }\r\n  \r\n  const result = [];\r\n  yield* search(0);\r\n  \r\n  function *search(index) {\r\n    if (result.length >= len) {\r\n      yield result.slice();\r\n      return;\r\n    }\r\n    for (let i = index; list.length - i >= len - result.length; i++) {\r\n      result.push(list[i]);\r\n      yield* search(i + 1);\r\n      result.pop();\r\n    }\r\n  }  \r\n}\r\n\r\nfunction *generateOrbs(dress, rarity = \"sr\", suggestedEffects = [], subElement = false) {\r\n  suggestedEffects = [...normalizeSuggestedEffects(suggestedEffects)];\r\n  \r\n  for (const stat of suggestedEffects) {\r\n    for (const subs of combination([\r\n      ...suggestedEffects.filter(e => e != stat),\r\n      \"all\"\r\n    ], subElement ? 3 : 4)) {\r\n      yield {\r\n        mainEffect: stat,\r\n        subEffects: subs,\r\n        subElement,\r\n        stats: buildOrbStats(dress, stat, subs, rarity)\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildOrbStats(dress, main, subs, rarity) {\r\n  const rarityIndex = rarity === \"ur\" ? 1 : 0;\r\n  const result = {};\r\n  assignStat(main, MAIN_EFFECTS);\r\n  subs.forEach(s => assignStat(s, SUB_EFFECTS));\r\n  return result;\r\n  \r\n  function assignStat(name, effectTable) {\r\n    if (name === \"all\") {\r\n      for (const key of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        result[key] = (result[key] || 0) + dress[key] * SUB_EFFECT_ALL[rarityIndex];\r\n      }\r\n    } else if (name.endsWith(\"%\")) {\r\n      const key = name.slice(0, -1);\r\n      result[key] = (result[key] || 0) + dress[key] * effectTable[name][rarityIndex];\r\n    } else {\r\n      result[name] = (result[name] || 0) + effectTable[name][rarityIndex];\r\n    }\r\n  }\r\n}\r\n\r\nfunction *normalizeSuggestedEffects(effects) {\r\n  for (const e of effects) {\r\n    yield e;\r\n    if (MAIN_EFFECTS[e + \"%\"]) {\r\n      yield e + \"%\";\r\n    }\r\n  }\r\n}\r\n","import allSkillData from \"./skill-data.yml\";\r\nimport {getBuffValue} from \"./simulate-util.mjs\";\r\n\r\nconst SPECIALS = {\r\n  \"聖チャールズスポーツユニ りり\": [\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(3)\r\n    }\r\n  ],\r\n  \"Magica2061 はなび\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"ギャルアーミー 丹\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.length ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"灼熱野球ユニ 蒼\": [\r\n    null,\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(4 * 2)\r\n    }\r\n  ],\r\n  \"ワイン娘 いろは\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stun ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス マリアンヌ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス りり\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"デモンズスタイルレウコシア 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.3)\r\n    }\r\n  ],\r\n  \"マジカルスイムスーツ ここあ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"†ハロウィッチ† いろは\": {\r\n    condBonus: bonusByBuffNumber(0.2)\r\n  },\r\n  \"フェニックス はなび\": {\r\n    condBonus: bonusByTargetDebuff(0.2)\r\n  },\r\n  \"デモンズスタイルレウコシア ここあ\": {\r\n    condBonus: bonusByBuffNumber(0.1)\r\n  },\r\n  \"デモンズスタイルレウコシア 丹\": {\r\n    critRate: ({targetDebuff}) => targetDebuff.length ? 0 : 1\r\n  },\r\n  \"Ultimate Magica 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      critRate: ({targetElement}) => targetElement === \"light\" ? 0.35 : 0.15,\r\n      extraDamageOnCrit: ({targetElement}) => targetElement === \"light\" ? 2.5 : 2\r\n    }\r\n  ]\r\n};\r\n\r\nexport const skillMap = new Map(allSkillData.map(s => [s.name, compileSkill(s)]));\r\n\r\n// FIXME: should we move this to build-time?\r\nfunction compileSkill({name, skills, special, passive}) {\r\n  const result = [];\r\n  for (let i = 0; i < skills.length; i++) {\r\n    result.push({\r\n      skill: skills[i],\r\n      special: compileSpecial(special?.[i], passive, Array.isArray(SPECIALS[name]) ? SPECIALS[name][i] : SPECIALS[name])\r\n    });\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction compileSpecial(...args) {\r\n  const result = {};\r\n  for (const target of args) {\r\n    if (!target) continue;\r\n    \r\n    for (const key in target) {\r\n      if (!result[key]) {\r\n        result[key] = [];\r\n      }\r\n      result[key].push(target[key]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction bonusByBuffNumber(bonus) {\r\n  return ({buff}) => Object.keys(buff).length * bonus + 1;\r\n}\r\n\r\nfunction bonusByTargetDebuff(bonus) {\r\n  return ({targetDebuff}) => targetDebuff.length * bonus + 1;\r\n}\r\n\r\nfunction cutByCrit(scale) {\r\n  return ({r}) => (1 - r.missRate) * r.critRate * scale;\r\n}\r\n\r\nconst SUPER = {\r\n  fire: \"lightning\",\r\n  lightning: \"water\",\r\n  water: \"fire\",\r\n  dark: \"light\",\r\n  light: \"dark\"\r\n};\r\n\r\nfunction getElementAffinity(self, target) {\r\n  if (SUPER[self] === target) {\r\n    return \"superior\";\r\n  }\r\n  if (SUPER[target] === self) {\r\n    return \"inferior\";\r\n  }\r\n  return \"neutral\";\r\n}\r\n\r\nconst BASE_RATE = {\r\n  superior: {\r\n    missRate: 0,\r\n    critRate: 0.45,\r\n    heavyRate: 0.3,\r\n    ignoreDefRate: 0\r\n  },\r\n  inferior: {\r\n    missRate: 0.5,\r\n    critRate: 0.15,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  },\r\n  neutral: {\r\n    missRate: 0,\r\n    critRate: 0.3,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  }\r\n};\r\n\r\nfunction sum(arr, context) {\r\n  if (!arr) return 0;\r\n  let result = 0;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result += value(context);\r\n    } else {\r\n      result += value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction product(arr, context) {\r\n  if (!arr) return 1;\r\n  let result = 1;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result *= value(context);\r\n    } else {\r\n      result *= value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getBasicRate(context) {\r\n  const {special, element, targetElement, buff, debuff} = context;\r\n  \r\n  const baseRate = BASE_RATE[\r\n    special.element?.[0] ||\r\n    targetElement in BASE_RATE && targetElement ||\r\n    getElementAffinity(element, targetElement)\r\n  ];\r\n  \r\n  const r = {};\r\n  for (const key in baseRate) {\r\n    let value = baseRate[key] + sum(special[key], context);\r\n    if (key === \"critRate\" && buff.crit) {\r\n      value += 0.3;\r\n    }\r\n    if (key === \"missRate\" && debuff.miss) {\r\n      value += 0.5;\r\n    }\r\n    r[key] = Math.min(Math.max(value, 0), 1);\r\n  }\r\n  \r\n  return r;\r\n}\r\n\r\nfunction getSpecialBonus(context) {\r\n  const {r, special, targetDef, targetDebuff} = context;\r\n  \r\n  const elementBonus = r.missRate * 0.7\r\n    // FIXME: do they add up?\r\n    + (1-r.missRate) * r.critRate * 1.5 * product(special.extraDamageOnCrit, context)\r\n    + (1-r.missRate) * (1-r.critRate) * r.heavyRate * 1.3\r\n    + (1-r.missRate) * (1-r.critRate) * (1-r.heavyRate) * 1;\r\n    \r\n  const condBonus = product(special.condBonus, context);\r\n    \r\n  const defBonus = r.ignoreDefRate * 1 +\r\n    (1-r.ignoreDefRate) * (750 / (750 + targetDef * (targetDebuff.def ? 0.3 : 1)));\r\n    \r\n  return elementBonus * condBonus * defBonus;\r\n}\r\n\r\nexport function simulateSkillMod({\r\n  dress,\r\n  turn: maxTurn = 5,\r\n  targetElement,\r\n  targetDef,\r\n  buff,\r\n  debuff,\r\n  targetBuff,\r\n  targetDebuff,\r\n  useCut = false,\r\n  targetNumber = 1,\r\n}) {\r\n  const skillData = skillMap.get(dress.name);\r\n  if (!skillData) throw new Error(`missing skill data for ${dress.name}`);\r\n\r\n  const skills = skillData.map((rawData, index) => {\r\n    const context = {\r\n      buff,\r\n      debuff,\r\n      targetBuff,\r\n      targetDebuff,\r\n      special: rawData.special,\r\n      element: dress.element,\r\n      targetElement,\r\n      targetDef,\r\n      targetNumber\r\n    };\r\n    \r\n    context.r = getBasicRate(context);\r\n    \r\n    return {\r\n      index,\r\n      mod: buildMod({\r\n        skill: rawData.skill,\r\n        bonus: dress.skill[index].bonus,\r\n        specialBonus: getSpecialBonus(context),\r\n        cut: useCut ? sum(rawData.special?.cutRate, context) : 0,\r\n        buff,\r\n        debuff,\r\n        targetNumber\r\n      }),\r\n      cd: dress.skill[index].cd?.[1] || 1,\r\n      sleep: 0,\r\n      recast: sum(rawData.special?.recast),\r\n      prefer: []\r\n    };\r\n  }).reverse();\r\n  \r\n  // FIXME: currently we only calculate `prefer` for 1cd skill. does it also work for other skills?\r\n  for (const skill of skills) {\r\n    if (skill.cd > 1) continue;\r\n    \r\n    for (const s of skills) {\r\n      if (s !== skill && cmpMod(s.mod, skill.mod) > 0) {\r\n        skill.prefer.push(s.index);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // if we use s1 while s2 is not in cd, add s2 to deadzone so we only generate rotation like\r\n  // 21112... instead of 12111...\r\n  let deadZone = new Set;\r\n  const results = [];\r\n  \r\n  search(0, Array(skills.length).fill(0), {}, []);\r\n  \r\n  return results;\r\n  \r\n  function search(turn, sleep, mod, history) {\r\n    if (turn >= maxTurn) {\r\n      for (let i = 0; i < results.length; i++) {\r\n        const r1 = cmpMod(mod, results[i].mod);\r\n        if (r1 > 0) {\r\n          results[i] = {history: history.slice(), mod};\r\n          return;\r\n        }\r\n        const r2 = cmpMod(results[i].mod, mod);\r\n        if (r2 > 0) {\r\n          return;\r\n        }\r\n        if (r1 === r2 && r1 === 0) return;\r\n      }\r\n      results.push({history: history.slice(), mod});\r\n      return;\r\n    }\r\n    \r\n    for (const skill of skills) {\r\n      if (sleep[skill.index] > 0) continue;\r\n      \r\n      if (skill.prefer.some(i => sleep[i] <= 0)) continue;\r\n      \r\n      if (deadZone.has(skill.index)) continue;\r\n      \r\n      let oldDeadZone;\r\n      if (skill.cd === 1) {\r\n        oldDeadZone = new Set(deadZone);\r\n        for (const s of skills) {\r\n          if (s === skill || sleep[s.index] > 0) continue;\r\n          deadZone.add(s.index);\r\n        }\r\n      }\r\n      \r\n      const newMod = addMod(mod, skill.mod);\r\n      const newSleep = sleep.slice();\r\n      newSleep[skill.index] = skill.cd;      \r\n      for (let i = 0; i < newSleep.length; i++) {\r\n        newSleep[i] += skill.recast - 1;\r\n      }\r\n      history.push(skill.index);\r\n      \r\n      search(turn + 1, newSleep, newMod, history);\r\n      \r\n      history.pop();\r\n      if (oldDeadZone) {\r\n        deadZone = oldDeadZone;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildMod({\r\n  skill,\r\n  bonus,\r\n  specialBonus,\r\n  cut,\r\n  buff,\r\n  debuff,\r\n  targetNumber\r\n}) {\r\n  const result = {};\r\n  for (const part of skill) {\r\n    for (const key in part.mod) {\r\n      result[key] = part.mod[key] *\r\n        (100 + bonus) / 100 *\r\n        specialBonus *\r\n        getBuffValue(buff, debuff, key) *\r\n        part.hits *\r\n        (part.aoe ? targetNumber : 1);\r\n    }\r\n  }\r\n  if (cut) {\r\n    result.targetHp = (result.targetHp || 0) + cut * 0.05 * 0.85;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction addMod(a, b) {\r\n  const result = {...a};\r\n  for (const key in b) {\r\n    result[key] = (result[key] || 0) + b[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction cmpMod(a, b) {\r\n  let greater = false;\r\n  for (const key in b) {\r\n    if (!(key in a) || a[key] < b[key]) return -1;\r\n    if (a[key] > b[key]) greater = true;\r\n  }\r\n  return greater ? 1 : 0;\r\n}\r\n","import dressDB from \"../dress-db.yml\";\r\n\r\nimport {calcScore, cmpScore} from \"./simulate-util.mjs\";\r\nimport {buildOrb} from \"./simulate-orb.mjs\";\r\nimport {simulateSkillMod, skillMap} from \"./simulate-skill.mjs\";\r\n\r\nexport function simulateSubDress({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  allDresses = getAllDresses(includedDresses, maxLvDresses),\r\n  mainDressName,\r\n  mainDress = allDresses.find(d => d.name === mainDressName),\r\n  orbRarity,\r\n  buff,\r\n  debuff,\r\n  mod\r\n}) {\r\n  buff = normalizeBuff(buff);\r\n  \r\n  const mainDressResult = buildDress({\r\n    dress: mainDress,\r\n    mod,\r\n    orbRarity\r\n  });\r\n  \r\n  const allSubs = [...getAllSubs(mainDress, allDresses, mod, orbRarity, buff, debuff, true)]\r\n    .sort(cmpScore)\r\n    .reverse();\r\n  \r\n  return {\r\n    mod,\r\n    mainDress: mainDressResult,\r\n    subDresses: allSubs\r\n  };\r\n}\r\n\r\nfunction *getAllSubs(mainDress, allDresses, mod, orb, buff, debuff, useSubEl) {\r\n  for (const dress of allDresses) {\r\n    if (dress === mainDress) continue;\r\n    \r\n    const build = subElement =>\r\n      buildDress({\r\n        dress,\r\n        mod,\r\n        subRatio: getSubRatio(mainDress, dress, subElement),\r\n        subElement,\r\n        orbRarity: orb\r\n      });\r\n    \r\n    yield build(false);\r\n    \r\n    if (useSubEl && !isJoker(dress) && mainDress.element !== dress.element) {\r\n      yield build(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeBuff(arr = []) {\r\n  const result = {\r\n    length: arr.length\r\n  };\r\n  for (const key of arr) {\r\n    result[key] = (result[key] || 0) + 1;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getDefaultTargetBuff() {\r\n  return {\r\n    immune: {\r\n      stun: true // this makes wine iroha stronger\r\n    }\r\n  };\r\n}\r\n\r\nexport function simulateDps({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  ignoreElement,\r\n  orb,\r\n  buff,\r\n  debuff,\r\n  target = {},\r\n  targetDebuff,\r\n  turn,\r\n  useCut\r\n}) {\r\n  target = normalizeTarget(target);\r\n  buff = normalizeBuff(buff);\r\n  debuff = normalizeBuff(debuff);\r\n  targetDebuff = normalizeBuff(targetDebuff);\r\n  \r\n  const allDresses = getAllDresses(includedDresses, maxLvDresses);\r\n  \r\n  const result = [];\r\n  \r\n  for (const dress of allDresses) {\r\n    if (!skillMap.has(dress.name)) continue;\r\n    \r\n    for (const {history, mod} of simulateSkillMod({\r\n      turn,\r\n      dress, \r\n      targetDef: target.targetDef,\r\n      targetElement: target.targetElement,\r\n      buff,\r\n      debuff,\r\n      targetBuff: getDefaultTargetBuff(), // FIXME: make it customizable\r\n      targetDebuff,\r\n      useCut\r\n    })) {\r\n      const mainDress = buildDress({\r\n        dress,\r\n        mod,\r\n        orbRarity: orb\r\n      });\r\n      const subs = [...getAllSubs(dress, allDresses, mod, orb, buff, debuff, ignoreElement)]\r\n        .sort(cmpScore)\r\n        .reverse();\r\n        \r\n      const subDresses = [];\r\n      const set = new Set;\r\n      for (const sub of subs) {\r\n        if (set.has(sub.dress.name)) continue;\r\n        set.add(sub.dress.name);\r\n        subDresses.push(sub);\r\n        if (subDresses.length >= 4) break;\r\n      }\r\n     \r\n      const subScore = subDresses.reduce((n, r) => n + r.score, 0);\r\n      \r\n      const targetScore = calcScore(target, mod);\r\n      \r\n      result.push({\r\n        score: mainDress.score + subScore + targetScore,\r\n        mainDress,\r\n        subDresses,\r\n        mod,\r\n        history\r\n      });\r\n    }\r\n  }\r\n  \r\n  const set = new Set;\r\n  \r\n  return result\r\n    .sort(cmpScore)\r\n    .reverse()\r\n    .filter(r => {\r\n      if (set.has(r.mainDress.dress.name)) {\r\n        return false;\r\n      }\r\n      set.add(r.mainDress.dress.name);\r\n      return true;\r\n    });\r\n}\r\n\r\nfunction normalizeTarget(target) {\r\n  const result = {};\r\n  for (const key in target) {\r\n    result[`target${key[0].toUpperCase()}${key.slice(1)}`] = target[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getSubRatio(main, sub, subElement) {\r\n  return (20 +\r\n    (getChar(main) === getChar(sub) ? 5 : 0) +\r\n    (main.element === sub.element || isJoker(sub) || subElement ? 5 : 0)) / 100;\r\n}\r\n\r\nfunction isJoker(dress) {\r\n  return dress.rarity === \"R\" || /^Magica 2020 \\S+$/.test(dress.name);\r\n}\r\n\r\nfunction getChar(dress) {\r\n  return dress.name.split(\" \").pop();\r\n}\r\n\r\nfunction buildDress({\r\n  dress,\r\n  mod, \r\n  subRatio = 1,\r\n  subElement = false,\r\n  orbRarity = \"sr\"\r\n}) {\r\n  const orb = buildOrb({\r\n    dress,\r\n    rarity: orbRarity,\r\n    mod,\r\n    subElement\r\n  });\r\n  return {\r\n    score: (calcScore(dress, mod) + orb.score) * subRatio,\r\n    dress,\r\n    orb\r\n  };\r\n}\r\n\r\nfunction getAllDresses(included, maxLv) {\r\n  included = new Set(included);\r\n  maxLv = new Set(maxLv);\r\n  \r\n  return dressDB\r\n    .filter(d => included.has(d.name))\r\n    .map(shallowCopy)\r\n    .map(dress => {\r\n      for (const stat of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        if (Array.isArray(dress[stat])) {\r\n          dress[stat] = dress[stat][maxLv.has(dress.name) ? 2 : 1];\r\n        }\r\n      }\r\n      return dress;\r\n    });\r\n}\r\n\r\nfunction shallowCopy(obj) {\r\n  return {...obj};\r\n}\r\n","\n\t\timport * as m from \"C:\\\\Users\\\\eight04\\\\dev\\\\mgcm-skill-data\\\\src\\\\simulate.worker.mjs\";\n\t\timport {expose} from \"comlink\";\n\n\t\texpose(m);\n\t"],"names":["BUFF_VALUE","atk","def","spd","getBuffValue","buff","debuff","key","calcScore","stat","mod","score","cmpScore","a","b","MAIN_EFFECTS","hp","hp%","atk%","def%","fcs","rst","SUB_EFFECTS","SUB_EFFECT_ALL","combination","list","len","length","slice","result","search","index","i","push","pop","generateOrbs","dress","rarity","suggestedEffects","subElement","normalizeSuggestedEffects","subs","filter","e","mainEffect","subEffects","stats","buildOrbStats","main","rarityIndex","assignStat","forEach","s","name","effectTable","endsWith","effects","SPECIALS","聖チャールズスポーツユニ りり","cutRate","cutByCrit","Magica2061 はなび","condBonus","bonusByTargetDebuff","ギャルアーミー 丹","targetDebuff","灼熱野球ユニ 蒼","ワイン娘 いろは","targetBuff","immune","stun","サディスティックサキュバス マリアンヌ","sleep","サディスティックサキュバス りり","デモンズスタイルレウコシア 陽彩","マジカルスイムスーツ ここあ","†ハロウィッチ† いろは","bonusByBuffNumber","フェニックス はなび","デモンズスタイルレウコシア ここあ","デモンズスタイルレウコシア 丹","critRate","Ultimate Magica 陽彩","targetElement","extraDamageOnCrit","skillMap","Map","map","compileSkill","skills","special","passive","skill","compileSpecial","Array","isArray","args","target","bonus","Object","keys","scale","r","missRate","SUPER","fire","lightning","water","dark","light","BASE_RATE","superior","heavyRate","ignoreDefRate","inferior","neutral","sum","arr","context","value","product","getBasicRate","element","baseRate","self","crit","miss","Math","min","max","getSpecialBonus","targetDef","simulateSkillMod","turn","maxTurn","useCut","targetNumber","skillData","get","Error","rawData","buildMod","specialBonus","cut","cd","recast","prefer","reverse","cmpMod","deadZone","Set","results","history","r1","r2","some","has","oldDeadZone","add","newMod","addMod","newSleep","fill","part","hits","aoe","targetHp","greater","getAllSubs","mainDress","allDresses","orb","useSubEl","build","buildDress","subRatio","getSubRatio","orbRarity","isJoker","normalizeBuff","sub","getChar","test","split","t","startsWith","join","sort","buildOrb","getAllDresses","included","maxLv","dressDB","d","shallowCopy","obj","includedDresses","maxLvDresses","mainDressName","find","subDresses","ignoreElement","toUpperCase","normalizeTarget","set","subScore","reduce","n","targetScore","comlinkC70A1A2B","m"],"mappings":"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"}