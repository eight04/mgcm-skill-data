{"version":3,"file":"simulate.worker-73eec9dd.js","sources":["../src/simulate-util.mjs","../src/simulate-orb.mjs","../src/simulate-skill.mjs","../src/simulate.worker.mjs","../src/simulate.worker.mjs?comlink"],"sourcesContent":["const BUFF_VALUE = {\r\n  atk: 0.5,\r\n  def: 0.7,\r\n  spd: 0.3\r\n};\r\n\r\nexport function getBuffValue(buff, debuff, key) {\r\n  if (buff[key] == debuff[key] || !BUFF_VALUE[key]) return 1;\r\n  if (buff[key]) return 1 + BUFF_VALUE[key];\r\n  return 1 - BUFF_VALUE[key];\r\n}\r\n\r\nexport function calcScore(stat, mod, bonusList) {\r\n  const bonusMap = {};\r\n  for (const bonus of bonusList) {\r\n    if (!bonusMap[bonus.type]) {\r\n      bonusMap[bonus.type] = 0;\r\n    }\r\n    bonusMap[bonus.type] += bonus.value;\r\n  }\r\n  let score = 0;\r\n  for (const key in mod) {\r\n    let statValue = stat[key] || 0;\r\n    if (bonusMap[key + \"%\"]) {\r\n      statValue *= (bonusMap[key + \"%\"] + 100) / 100;\r\n    }\r\n    if (bonusMap[key]) {\r\n      statValue += bonusMap[key];\r\n    }\r\n    score += statValue * mod[key];\r\n  }\r\n  return score;\r\n}\r\n\r\nexport function cmpScore(a, b) {\r\n  return a.score - b.score;\r\n}\r\n\r\nexport const charGroup = {\r\n  \"いろは\": 1,\r\n  \"花織\": 1,\r\n  \"マリアンヌ\": 1,\r\n  \"セイラ\": 2,\r\n  \"ここあ\": 2,\r\n  \"丹\": 2,\r\n  \"陽彩\": 3,\r\n  \"蒼\": 3,\r\n  \"依子\": 3,\r\n  \"エリザ\": 4,\r\n  \"りり\": 4,\r\n  \"はなび\": 4\r\n};\r\n","import {calcScore, cmpScore} from \"./simulate-util.mjs\";\r\n\r\nconst MAIN_EFFECTS = {\r\n  hp: [4240, 5220],\r\n  \"hp%\": [0.5, 0.65],\r\n  atk: [270, 345],\r\n  \"atk%\": [0.5, 0.65],\r\n  def: [270, 345],\r\n  \"def%\": [0.5, 0.65],\r\n  spd: [45, 60],\r\n  fcs: [65, 80],\r\n  rst: [65, 80]\r\n};\r\n\r\nconst SUB_EFFECTS = {\r\n  \"hp\": [2050, 2610],\r\n  \"hp%\": [0.22, 0.30],\r\n  \"atk\": [135, 170],\r\n  \"atk%\": [0.22, 0.30],\r\n  \"def\": [135, 170],\r\n  \"def%\": [0.22, 0.30],\r\n  \"spd\": [18, 25],\r\n  \"fcs\": [27, 35],\r\n  \"rst\": [27, 35]\r\n};\r\n\r\nconst SUB_EFFECT_ALL = [0.05, 0.07];\r\n\r\nexport function buildOrb({dress, rarity, mod, subElement, bonusList}) {\r\n  const suggestedEffects = Object.keys(mod).filter(t => !t.startsWith(\"target\"));\r\n  return [...generateOrbs(dress, rarity, suggestedEffects, subElement)]\r\n    .map(orb => {\r\n      if (subElement) {\r\n        orb.subEffects.push(\"elm\");\r\n      }\r\n      return {\r\n        score: calcScore(orb.stats, mod, bonusList),\r\n        name: `${orb.mainEffect} (${orb.subEffects.join(\",\")})`\r\n      };\r\n    })\r\n    .sort(cmpScore)\r\n    .pop() || {score: 0, name: \"empty\"}; // this happens when the orb contributes 0 damage to the mod\r\n}\r\n\r\nfunction *combination(list, len) {\r\n  if (list.length <= len) {\r\n    yield list.slice();\r\n    return;\r\n  }\r\n  \r\n  const result = [];\r\n  yield* search(0);\r\n  \r\n  function *search(index) {\r\n    if (result.length >= len) {\r\n      yield result.slice();\r\n      return;\r\n    }\r\n    for (let i = index; list.length - i >= len - result.length; i++) {\r\n      result.push(list[i]);\r\n      yield* search(i + 1);\r\n      result.pop();\r\n    }\r\n  }  \r\n}\r\n\r\nfunction *generateOrbs(dress, rarity = \"sr\", suggestedEffects = [], subElement = false) {\r\n  suggestedEffects = [...normalizeSuggestedEffects(suggestedEffects)];\r\n  \r\n  for (const stat of suggestedEffects) {\r\n    for (const subs of combination([\r\n      ...suggestedEffects.filter(e => e != stat),\r\n      \"all\"\r\n    ], subElement ? 3 : 4)) {\r\n      yield {\r\n        mainEffect: stat,\r\n        subEffects: subs,\r\n        subElement,\r\n        stats: buildOrbStats(dress, stat, subs, rarity)\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildOrbStats(dress, main, subs, rarity) {\r\n  const rarityIndex = rarity === \"ur\" ? 1 : 0;\r\n  const result = {};\r\n  assignStat(main, MAIN_EFFECTS);\r\n  subs.forEach(s => assignStat(s, SUB_EFFECTS));\r\n  return result;\r\n  \r\n  function assignStat(name, effectTable) {\r\n    if (name === \"all\") {\r\n      for (const key of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        result[key] = (result[key] || 0) + dress[key] * SUB_EFFECT_ALL[rarityIndex];\r\n      }\r\n    } else if (name.endsWith(\"%\")) {\r\n      const key = name.slice(0, -1);\r\n      result[key] = (result[key] || 0) + dress[key] * effectTable[name][rarityIndex];\r\n    } else {\r\n      result[name] = (result[name] || 0) + effectTable[name][rarityIndex];\r\n    }\r\n  }\r\n}\r\n\r\nfunction *normalizeSuggestedEffects(effects) {\r\n  for (const e of effects) {\r\n    yield e;\r\n    if (MAIN_EFFECTS[e + \"%\"]) {\r\n      yield e + \"%\";\r\n    }\r\n  }\r\n}\r\n","import allSkillData from \"./skill-data.yml\";\r\nimport {getBuffValue} from \"./simulate-util.mjs\";\r\n\r\nconst SPECIALS = {\r\n  \"聖チャールズスポーツユニ りり\": [\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(3)\r\n    }\r\n  ],\r\n  \"Magica2061 はなび\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"ギャルアーミー 丹\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.length ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"灼熱野球ユニ 蒼\": [\r\n    null,\r\n    null,\r\n    {\r\n      cutRate: cutByCrit(4 * 2)\r\n    }\r\n  ],\r\n  \"灼熱野球ユニ ここあ\": [\r\n    null,\r\n    null,\r\n    {\r\n      missRate: ({targetDebuff}) => targetDebuff.def ? -999 : 0,\r\n      critRate: ({targetDebuff}) => targetDebuff.def ? 999 : 0\r\n    }\r\n  ],\r\n  \"ワイン娘 いろは\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stun ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス マリアンヌ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"サディスティックサキュバス りり\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetDebuff}) => targetDebuff.sleep ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"デモンズスタイルレウコシア 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.3)\r\n    }\r\n  ],\r\n  \"マジカルスイムスーツ ここあ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.15)\r\n    }\r\n  ],\r\n  \"†ハロウィッチ† いろは\": {\r\n    condBonus: bonusByBuffNumber(0.2)\r\n  },\r\n  \"フェニックス はなび\": {\r\n    condBonus: bonusByTargetDebuff(0.2)\r\n  },\r\n  \"デモンズスタイルレウコシア ここあ\": {\r\n    condBonus: bonusByBuffNumber(0.1)\r\n  },\r\n  \"デモンズスタイルレウコシア 丹\": {\r\n    critRate: ({targetDebuff}) => targetDebuff.length ? 0 : 1\r\n  },\r\n  \"Ultimate Magica 陽彩\": [\r\n    null,\r\n    null,\r\n    {\r\n      critRate: ({targetElement}) => targetElement === \"light\" ? 0.35 : 0.15,\r\n      extraDamageOnCrit: ({targetElement}) => targetElement === \"light\" ? 2.5 : 2\r\n    }\r\n  ],\r\n  \"バハムート 陽彩\": [\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.05/0.4)\r\n    }\r\n  ],\r\n  \"デモンズスタイルドレイク エリザ\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stun ? 1.5 : 1\r\n    }\r\n  ],\r\n  \"イフリート 依子\": [\r\n    null,\r\n    null,\r\n    {\r\n      cutRate: ({targetBuff}) => targetBuff.length * 2\r\n    }\r\n  ],\r\n  \"オーシャンドレス りり\": [\r\n    null,\r\n    null,\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.3)\r\n    }\r\n  ],\r\n  \"不思議の国のアリス 花織\": [\r\n    null,\r\n    null,\r\n    {\r\n      recast: ({targetBuff}) => -targetBuff.length\r\n    }\r\n  ],\r\n  \"デモンズスタイルドレイク マリアンヌ\": {\r\n    condBonus: bonusByTargetDebuff(0.25)\r\n  },\r\n  \"Xenos Magica 丹\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stune ? 1.3 : 1\r\n    }\r\n  ],\r\n  \"Xenos Magica 蒼\": [\r\n    null,\r\n    {\r\n      condBonus: bonusByBuffNumber(0.4)\r\n    },\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stune ? 1.3 : 1\r\n    }\r\n  ],\r\n  \"なのは いろは\": [\r\n    null,\r\n    {\r\n      condBonus: ({targetBuff}) => targetBuff.immune.stune ? 1.5 : 1\r\n    },\r\n    {\r\n      condBonus: ({targetBuff, targetDebuff}) =>\r\n        (targetBuff.length * 0.5 + 1) * (targetDebuff.length ? 1 : 1.5)\r\n    }\r\n  ],\r\n  \"フェイト 花織\": [\r\n    null,\r\n    null,\r\n    {\r\n      // FIXME: https://github.com/eight04/mgcm-skill-data/issues/63\r\n      condBonus: bonusByBuffNumber(0.1 * 4)\r\n    }\r\n  ],\r\n  \"ヴィータ ここあ\": [\r\n    null,\r\n    {\r\n      condBonus: bonusByBuffNumber(0.2)\r\n    },\r\n    {\r\n      condBonus: bonusByTargetDebuff(0.2)\r\n    }\r\n  ]\r\n};\r\n\r\nexport const skillMap = new Map(allSkillData.map(s => [s.name, compileSkill(s)]));\r\n\r\n// FIXME: should we move this to build-time?\r\nfunction compileSkill({name, skills, special, passive}) {\r\n  const result = [];\r\n  for (let i = 0; i < skills.length; i++) {\r\n    result.push({\r\n      skill: skills[i],\r\n      special: compileSpecial(special?.[i], passive, Array.isArray(SPECIALS[name]) ? SPECIALS[name][i] : SPECIALS[name])\r\n    });\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction compileSpecial(...args) {\r\n  const result = {};\r\n  for (const target of args) {\r\n    if (!target) continue;\r\n    \r\n    for (const key in target) {\r\n      if (!result[key]) {\r\n        result[key] = [];\r\n      }\r\n      result[key].push(target[key]);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction bonusByBuffNumber(bonus) {\r\n  return ({buff}) => Object.keys(buff).length * bonus + 1;\r\n}\r\n\r\nfunction bonusByTargetDebuff(bonus) {\r\n  return ({targetDebuff}) => targetDebuff.length * bonus + 1;\r\n}\r\n\r\nfunction cutByCrit(scale) {\r\n  return ({r}) => (1 - r.missRate) * r.critRate * scale;\r\n}\r\n\r\nconst SUPER = {\r\n  fire: \"lightning\",\r\n  lightning: \"water\",\r\n  water: \"fire\",\r\n  dark: \"light\",\r\n  light: \"dark\"\r\n};\r\n\r\nfunction getElementAffinity(self, target) {\r\n  if (SUPER[self] === target) {\r\n    return \"superior\";\r\n  }\r\n  if (SUPER[target] === self) {\r\n    return \"inferior\";\r\n  }\r\n  return \"neutral\";\r\n}\r\n\r\nconst BASE_RATE = {\r\n  superior: {\r\n    missRate: 0,\r\n    critRate: 0.45,\r\n    heavyRate: 0.3,\r\n    ignoreDefRate: 0\r\n  },\r\n  inferior: {\r\n    missRate: 0.5,\r\n    critRate: 0.15,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  },\r\n  neutral: {\r\n    missRate: 0,\r\n    critRate: 0.3,\r\n    heavyRate: 0,\r\n    ignoreDefRate: 0\r\n  }\r\n};\r\n\r\nfunction sum(arr, context) {\r\n  if (!arr) return 0;\r\n  let result = 0;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result += value(context);\r\n    } else {\r\n      result += value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction product(arr, context) {\r\n  if (!arr) return 1;\r\n  let result = 1;\r\n  for (const value of arr) {\r\n    if (typeof value === \"function\") {\r\n      result *= value(context);\r\n    } else {\r\n      result *= value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getBasicRate(context) {\r\n  const {special, element, targetElement, buff, debuff} = context;\r\n  \r\n  const baseRate = BASE_RATE[\r\n    special.element?.[0] ||\r\n    targetElement in BASE_RATE && targetElement ||\r\n    getElementAffinity(element, targetElement)\r\n  ];\r\n  \r\n  const r = {};\r\n  for (const key in baseRate) {\r\n    let value = baseRate[key] + sum(special[key], context);\r\n    if (key === \"critRate\" && buff.crit) {\r\n      value += 0.3;\r\n    }\r\n    if (key === \"missRate\" && debuff.miss) {\r\n      value += 0.5;\r\n    }\r\n    r[key] = Math.min(Math.max(value, 0), 1);\r\n  }\r\n  \r\n  r.critRate += sum(getBonuses(context.bonusList, 'critRate')) / 100;\r\n  \r\n  return r;\r\n}\r\n\r\nfunction *getBonuses(list, type) {\r\n  for (const bonus of list) {\r\n    if (list.type === type) {\r\n      yield bonus.value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getElementBonus(context) {\r\n  const {r, special, bonusList} = context;\r\n  const critDamage = 1.5 + sum(getBonuses(bonusList, 'critDamage')) / 100;\r\n  return r.missRate * 0.7\r\n    // FIXME: do they add up?\r\n    + (1-r.missRate) * r.critRate * critDamage * product(special.extraDamageOnCrit, context)\r\n    + (1-r.missRate) * (1-r.critRate) * r.heavyRate * 1.3\r\n    + (1-r.missRate) * (1-r.critRate) * (1-r.heavyRate) * 1;\r\n}\r\n\r\nfunction getDefBonus(context) {\r\n  const {r, targetDef, targetDebuff} = context;\r\n  return r.ignoreDefRate * 1 +\r\n    (1-r.ignoreDefRate) * (750 / (750 + targetDef * (targetDebuff.def ? 0.3 : 1)));\r\n}\r\n\r\nfunction getCondBonus(context) {\r\n  const {special} = context;\r\n  return product(special.condBonus, context);\r\n}\r\n\r\nfunction getHpPctBonus(context) {\r\n  const {scaleByHp, scaleByTargetHp} = context.special;\r\n  return scale(sum(scaleByHp), context.hpPct) * scale(sum(scaleByTargetHp), context.targetHpPct);\r\n  \r\n  function scale(type, pct) {\r\n    if (!type) return 1;\r\n    if (type > 0) {\r\n      return 1 + 0.8 * pct;\r\n    }\r\n    return 1 + 0.8 * (1 - pct);\r\n  }\r\n}\r\n\r\nexport function simulateSkillMod({\r\n  dress,\r\n  turn: maxTurn = 5,\r\n  targetElement,\r\n  targetDef,\r\n  buff,\r\n  debuff,\r\n  targetBuff,\r\n  targetDebuff,\r\n  targetHpPct = 1,\r\n  hpPct = 1,\r\n  useCut = false,\r\n  targetNumber = 1,\r\n  endlessMode,\r\n  recastReduction = [],\r\n  extraDamageElement,\r\n  orders = [],\r\n  bonusList = []\r\n}) {\r\n  const skillData = skillMap.get(dress.name);\r\n  if (!skillData) throw new Error(`missing skill data for ${dress.name}`);\r\n  \r\n  const skills = skillData.map((rawData, index) => {\r\n    const context = {\r\n      buff,\r\n      debuff,\r\n      targetBuff,\r\n      targetDebuff,\r\n      special: rawData.special,\r\n      element: dress.element,\r\n      targetElement,\r\n      targetDef,\r\n      targetNumber,\r\n      hpPct,\r\n      targetHpPct,\r\n      extraDamageElement,\r\n      bonusList\r\n    };\r\n    \r\n    context.r = getBasicRate(context);\r\n    \r\n    return {\r\n      index,\r\n      mod: buildMod({\r\n        skill: rawData.skill,\r\n        bonus: dress.skill[index].bonus,\r\n        elementBonus: getElementBonus(context),\r\n        defBonus: getDefBonus(context),\r\n        condBonus: getCondBonus(context),\r\n        hpPctBonus: getHpPctBonus(context),\r\n        extraDamage: extraDamageElement !== \"none\" && extraDamageElement === dress.element,\r\n        cut: useCut ? sum(rawData.special?.cutRate, context) : 0,\r\n        buff,\r\n        debuff,\r\n        targetNumber,\r\n        endlessMode,\r\n      }),\r\n      cd: dress.skill[index].cd?.[1] || 1,\r\n      sleep: 0,\r\n      recast: sum(rawData.special?.recast, context),\r\n      recastSelf: rawData.special?.recastSelf?.some(Boolean),\r\n      prefer: []\r\n    };\r\n  }).reverse();\r\n  \r\n  // FIXME: currently we only calculate `prefer` for 1cd skill. does it also work for other skills?\r\n  for (const skill of skills) {\r\n    if (skill.cd > 1) continue;\r\n    \r\n    for (const s of skills) {\r\n      if (s !== skill && cmpMod(s.mod, skill.mod) > 0) {\r\n        skill.prefer.push(s.index);\r\n      }\r\n    }\r\n  }\r\n  \r\n  // if we use s1 while s2 is not in cd, add s2 to deadzone so we only generate rotation like\r\n  // 21112... instead of 12111...\r\n  let deadZone = new Set;\r\n  const results = [];\r\n  \r\n  search(0, Array(skills.length).fill(0), {}, []);\r\n  \r\n  for (const order of orders) {\r\n    let mod = {};\r\n    for (const i of order.split(\"\").map(n => Number(n) - 1)) {\r\n      mod = addMod(mod, skills.find(s => s.index === i).mod);\r\n    }\r\n    results.push({mod, historyHash: order, required: true});\r\n  }\r\n  \r\n  return results;\r\n  \r\n  function search(turn, sleep, mod, history) {\r\n    if (turn >= maxTurn) {\r\n      const historyHash = history.map(v => v + 1).join(\"\");\r\n      for (let i = 0; i < results.length; i++) {\r\n        const r1 = cmpMod(mod, results[i].mod);\r\n        if (r1 > 0) {\r\n          results[i] = {historyHash, mod};\r\n          return;\r\n        }\r\n        const r2 = cmpMod(results[i].mod, mod);\r\n        if (r2 > 0) {\r\n          return;\r\n        }\r\n        if (r1 === r2 && r1 === 0) {\r\n          return;\r\n        }\r\n      }\r\n      results.push({historyHash, mod});\r\n      return;\r\n    }\r\n    \r\n    for (const skill of skills) {\r\n      if (sleep[skill.index] > 0) continue;\r\n      \r\n      if (skill.prefer.some(i => sleep[i] <= 0)) continue;\r\n      \r\n      if (deadZone.has(skill.index)) continue;\r\n      \r\n      let oldDeadZone;\r\n      if (skill.cd === 1) {\r\n        oldDeadZone = new Set(deadZone);\r\n        for (const s of skills) {\r\n          if (s === skill || sleep[s.index] > 0) continue;\r\n          deadZone.add(s.index);\r\n        }\r\n      }\r\n      \r\n      const newMod = addMod(mod, skill.mod);\r\n      const newSleep = sleep.slice();\r\n      newSleep[skill.index] = skill.cd;      \r\n      for (let i = 0; i < newSleep.length; i++) {\r\n        newSleep[i] += (!skill.recastSelf || skill.index === i ? skill.recast : 0)\r\n          - 1\r\n          - (recastReduction.length > turn ? recastReduction[turn] : 0);\r\n      }\r\n      history.push(skill.index);\r\n      \r\n      search(turn + 1, newSleep, newMod, history);\r\n      \r\n      history.pop();\r\n      if (oldDeadZone) {\r\n        deadZone = oldDeadZone;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction buildMod({\r\n  skill,\r\n  bonus,\r\n  elementBonus,\r\n  defBonus,\r\n  condBonus,\r\n  hpPctBonus,\r\n  cut,\r\n  buff,\r\n  debuff,\r\n  targetNumber,\r\n  endlessMode,\r\n  extraDamage\r\n}) {\r\n  const result = {};\r\n  skill.forEach((part, i) => {\r\n    for (let key in part.mod) {\r\n      const value = part.mod[key];\r\n      let fixed = false;\r\n      if (key.startsWith(\"fixed\")) {\r\n        fixed = true;\r\n        key = key[5].toLowerCase() + key.slice(6);\r\n      }\r\n      result[key] = (result[key] || 0) +\r\n        value *\r\n        (100 + bonus) / 100 *\r\n        (fixed ? 1 : elementBonus) *\r\n        (fixed ? 1 : defBonus) *\r\n        getBuffValue(buff, debuff, key) * // FIXME: does buff affect fixed damage?\r\n        hpPctBonus *\r\n        condBonus *\r\n        part.hits *\r\n        (part.aoe ? targetNumber : 1) *\r\n        getEndlessBonus(endlessMode, part.hits, i > 0) *\r\n        (extraDamage ? 1.5 : 1);\r\n    }\r\n  });\r\n  if (cut) {\r\n    result.targetHp = (result.targetHp || 0) + cut * 0.05 * 0.85;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getEndlessBonus(mode, hits, isSecondPart) {\r\n  if (mode === \"s3\") {\r\n    if (isSecondPart) return 5;\r\n    if (hits <= 1) return 1;\r\n    return ((hits - 1) * 5 + 1) / hits;\r\n  }\r\n  \r\n  if (mode === \"s4\") {\r\n    if (isSecondPart) return 1;\r\n    if (hits <= 1) return 6;\r\n    return (6 + (hits - 1)) / hits;\r\n  }\r\n  \r\n  return 1;\r\n}\r\n\r\nfunction addMod(a, b) {\r\n  const result = {...a};\r\n  for (const key in b) {\r\n    result[key] = (result[key] || 0) + b[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction cmpMod(a, b) {\r\n  for (const key in b) {\r\n    if (!(key in a) || a[key] < b[key]) return -1;\r\n  }\r\n  for (const key in a) {\r\n    if (!(key in b) || a[key] > b[key]) return 1;\r\n  }\r\n  return 0;\r\n}\r\n","import dressDB from \"../dress-db.yml\";\r\n\r\nimport {calcScore, cmpScore, charGroup} from \"./simulate-util.mjs\";\r\nimport {buildOrb} from \"./simulate-orb.mjs\";\r\nimport {simulateSkillMod, skillMap} from \"./simulate-skill.mjs\";\r\n\r\nexport function simulateSubDress({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  allDresses = getAllDresses(includedDresses, maxLvDresses),\r\n  mainDressName,\r\n  mainDress = allDresses.find(d => d.name === mainDressName),\r\n  orbRarity,\r\n  mod,\r\n  useSubGroup\r\n}) {\r\n  const mainDressResult = buildDress({\r\n    dress: mainDress,\r\n    mod,\r\n    orbRarity\r\n  });\r\n  \r\n  const allSubs = [...getAllSubs({\r\n    mainDress,\r\n    allDresses,\r\n    mod,\r\n    orbRarity,\r\n    useSubEl: true,\r\n    useSubGroup\r\n  })]\r\n    .sort(cmpScore)\r\n    .reverse();\r\n  \r\n  return {\r\n    mod,\r\n    mainDress: mainDressResult,\r\n    subDresses: allSubs\r\n  };\r\n}\r\n\r\nfunction *getAllSubs({\r\n  mainDress,\r\n  allDresses,\r\n  mod,\r\n  orbRarity,\r\n  useSubEl,\r\n  useSubGroup,\r\n  bonusList, \r\n}) {\r\n  for (const dress of allDresses) {\r\n    if (dress === mainDress) continue;\r\n    \r\n    const build = subElement =>\r\n      buildDress({\r\n        dress,\r\n        mod,\r\n        subRatio: getSubRatio(mainDress, dress, subElement, useSubGroup),\r\n        subElement,\r\n        orbRarity,\r\n        bonusList\r\n      });\r\n    \r\n    yield build(false);\r\n    \r\n    if (useSubEl && !isJoker(dress) && mainDress.element !== dress.element) {\r\n      yield build(true);\r\n    }\r\n  }\r\n}\r\n\r\nfunction normalizeBuff(arr = []) {\r\n  const result = {\r\n    length: arr.length\r\n  };\r\n  for (const key of arr) {\r\n    result[key] = (result[key] || 0) + 1;\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getDefaultTargetBuff() {\r\n  return {\r\n    immune: {\r\n      stun: true // this makes wine iroha stronger\r\n    }\r\n  };\r\n}\r\n\r\nexport function simulateDps({\r\n  includedDresses,\r\n  maxLvDresses,\r\n  ignoreElement,\r\n  orb,\r\n  buff,\r\n  debuff,\r\n  target = {},\r\n  targetDebuff,\r\n  turn,\r\n  useCut,\r\n  targetNumber,\r\n  endlessMode,\r\n  recastReduction,\r\n  // leaderBuff,\r\n  hpPct,\r\n  targetHpPct,\r\n  useSubGroup,\r\n  extraDamageElement,\r\n  customSkillOrder,\r\n  bonusList,\r\n}) {\r\n  target = normalizeTarget(target);\r\n  buff = normalizeBuff(buff);\r\n  debuff = normalizeBuff(debuff);\r\n  targetDebuff = normalizeBuff(targetDebuff);\r\n  \r\n  const allDresses = getAllDresses(includedDresses, maxLvDresses);\r\n  \r\n  const result = [];\r\n  \r\n  for (const dress of allDresses) {\r\n    if (!skillMap.has(dress.name)) continue;\r\n    \r\n    const currentBonuses = bonusList.filter(b => !b.element || b.element === dress.element);\r\n    \r\n    for (const {historyHash, mod, required} of simulateSkillMod({\r\n      turn,\r\n      dress, \r\n      targetDef: target.targetDef,\r\n      targetElement: target.targetElement,\r\n      buff,\r\n      debuff,\r\n      targetBuff: getDefaultTargetBuff(), // FIXME: make it customizable\r\n      targetDebuff,\r\n      useCut,\r\n      targetNumber,\r\n      endlessMode,\r\n      recastReduction,\r\n      hpPct,\r\n      targetHpPct,\r\n      extraDamageElement,\r\n      orders: customSkillOrder[dress.name],\r\n      bonusList: currentBonuses\r\n    })) {\r\n      const mainDress = buildDress({\r\n        dress,\r\n        mod,\r\n        orbRarity: orb,\r\n        bonusList: currentBonuses\r\n      });\r\n      const subs = [...getAllSubs({\r\n        mainDress: dress,\r\n        allDresses,\r\n        mod,\r\n        orb,\r\n        useSubEl: ignoreElement,\r\n        useSubGroup,\r\n        bonusList: currentBonuses.filter(b => b.type.endsWith(\"%\"))\r\n      })]\r\n        .sort(cmpScore)\r\n        .reverse();\r\n        \r\n      const subDresses = [];\r\n      const set = new Set;\r\n      for (const sub of subs) {\r\n        if (set.has(sub.dress.name)) continue;\r\n        set.add(sub.dress.name);\r\n        subDresses.push(sub);\r\n        if (subDresses.length >= 4) break;\r\n      }\r\n     \r\n      const subScore = subDresses.reduce((n, r) => n + r.score, 0);\r\n      \r\n      const targetScore = calcScore(target, mod, []); // no bonus for target?\r\n      \r\n      result.push({\r\n        score: mainDress.score + subScore + targetScore,\r\n        mainDress,\r\n        subDresses,\r\n        mod,\r\n        historyHash,\r\n        required\r\n      });\r\n    }\r\n  }\r\n  \r\n  const set = new Set;\r\n  \r\n  return result\r\n    .sort(cmpScore)\r\n    .reverse()\r\n    .filter(r => {\r\n      if (set.has(r.mainDress.dress.name) && !r.required) {\r\n        return false;\r\n      }\r\n      set.add(r.mainDress.dress.name);\r\n      return true;\r\n    });\r\n}\r\n\r\nfunction normalizeTarget(target) {\r\n  const result = {};\r\n  for (const key in target) {\r\n    result[`target${key[0].toUpperCase()}${key.slice(1)}`] = target[key];\r\n  }\r\n  return result;\r\n}\r\n\r\nfunction getSubRatio(main, sub, subElement, useSubGroup) {\r\n  return (20 +\r\n    (isSameChar() ? 5 : 0) +\r\n    (main.element === sub.element || isJoker(sub) || subElement ? 5 : 0)) / 100;\r\n    \r\n  function isSameChar() {\r\n    const charA = getChar(main);\r\n    const charB = getChar(sub);\r\n    return charA === charB || useSubGroup && charGroup[charA] === charGroup[charB];\r\n  }\r\n}\r\n\r\nfunction isJoker(dress) {\r\n  return dress.rarity === \"R\" || /^Magica2020 \\S+$/.test(dress.name);\r\n}\r\n\r\nfunction getChar(dress) {\r\n  return dress.name.split(\" \").pop();\r\n}\r\n\r\nfunction buildDress({\r\n  dress,\r\n  mod, \r\n  subRatio = 1,\r\n  subElement = false,\r\n  orbRarity = \"sr\",\r\n  bonusList = []\r\n}) {\r\n  const orb = buildOrb({\r\n    dress,\r\n    rarity: orbRarity,\r\n    mod,\r\n    subElement,\r\n    bonusList: bonusList.filter(b => b.type.endsWith('%'))\r\n  });\r\n  return {\r\n    score: (calcScore(dress, mod, bonusList) + orb.score) * subRatio,\r\n    dress,\r\n    orb\r\n  };\r\n}\r\n\r\nfunction getAllDresses(included, maxLv) {\r\n  included = new Set(included);\r\n  maxLv = new Set(maxLv);\r\n  \r\n  return dressDB\r\n    .filter(d => included.has(d.name))\r\n    .map(shallowCopy)\r\n    .map(dress => {\r\n      for (const stat of [\"hp\", \"atk\", \"def\", \"spd\", \"fcs\", \"rst\"]) {\r\n        if (Array.isArray(dress[stat])) {\r\n          dress[stat] = dress[stat][maxLv.has(dress.name) ? 2 : 1];\r\n        }\r\n      }\r\n      return dress;\r\n    });\r\n}\r\n\r\nfunction shallowCopy(obj) {\r\n  return {...obj};\r\n}\r\n","\n\t\timport * as m from \"C:\\\\Users\\\\eight04\\\\dev\\\\mgcm-skill-data\\\\src\\\\simulate.worker.mjs\";\n\t\timport {expose} from \"comlink\";\n\n\t\texpose(m);\n\t"],"names":["BUFF_VALUE","atk","def","spd","getBuffValue","buff","debuff","key","calcScore","stat","mod","bonusList","bonusMap","bonus","type","value","score","statValue","cmpScore","a","b","charGroup","いろは","花織","マリアンヌ","セイラ","ここあ","丹","陽彩","蒼","依子","エリザ","りり","はなび","MAIN_EFFECTS","hp","hp%","atk%","def%","fcs","rst","SUB_EFFECTS","SUB_EFFECT_ALL","combination","list","len","length","slice","result","search","index","i","push","pop","generateOrbs","dress","rarity","suggestedEffects","subElement","normalizeSuggestedEffects","subs","filter","e","mainEffect","subEffects","stats","buildOrbStats","main","rarityIndex","assignStat","forEach","s","name","effectTable","endsWith","effects","SPECIALS","聖チャールズスポーツユニ りり","cutRate","cutByCrit","Magica2061 はなび","condBonus","bonusByTargetDebuff","ギャルアーミー 丹","targetDebuff","灼熱野球ユニ 蒼","灼熱野球ユニ ここあ","missRate","critRate","ワイン娘 いろは","targetBuff","immune","stun","サディスティックサキュバス マリアンヌ","sleep","サディスティックサキュバス りり","デモンズスタイルレウコシア 陽彩","マジカルスイムスーツ ここあ","†ハロウィッチ† いろは","bonusByBuffNumber","フェニックス はなび","デモンズスタイルレウコシア ここあ","デモンズスタイルレウコシア 丹","Ultimate Magica 陽彩","targetElement","extraDamageOnCrit","バハムート 陽彩","デモンズスタイルドレイク エリザ","イフリート 依子","オーシャンドレス りり","不思議の国のアリス 花織","recast","デモンズスタイルドレイク マリアンヌ","Xenos Magica 丹","stune","Xenos Magica 蒼","なのは いろは","フェイト 花織","ヴィータ ここあ","skillMap","Map","map","compileSkill","skills","special","passive","skill","compileSpecial","Array","isArray","args","target","Object","keys","scale","r","SUPER","fire","lightning","water","dark","light","BASE_RATE","superior","heavyRate","ignoreDefRate","inferior","neutral","sum","arr","context","product","getBasicRate","element","baseRate","self","crit","miss","Math","min","max","getBonuses","getElementBonus","critDamage","getDefBonus","targetDef","getCondBonus","getHpPctBonus","scaleByHp","scaleByTargetHp","hpPct","targetHpPct","pct","simulateSkillMod","turn","maxTurn","useCut","targetNumber","endlessMode","recastReduction","extraDamageElement","orders","skillData","get","Error","rawData","buildMod","elementBonus","defBonus","hpPctBonus","extraDamage","cut","cd","recastSelf","some","Boolean","prefer","reverse","cmpMod","deadZone","Set","results","history","historyHash","v","join","r1","r2","has","oldDeadZone","add","newMod","addMod","newSleep","fill","order","split","n","Number","find","required","part","fixed","startsWith","toLowerCase","hits","aoe","getEndlessBonus","targetHp","mode","isSecondPart","getAllSubs","mainDress","allDresses","orbRarity","useSubEl","useSubGroup","build","buildDress","subRatio","getSubRatio","isJoker","normalizeBuff","sub","charA","getChar","charB","isSameChar","test","orb","t","sort","buildOrb","getAllDresses","included","maxLv","dressDB","d","shallowCopy","obj","includedDresses","maxLvDresses","mainDressName","subDresses","ignoreElement","customSkillOrder","toUpperCase","normalizeTarget","currentBonuses","set","subScore","reduce","targetScore","comlinkB1Af8Bef","m"],"mappings":"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"}